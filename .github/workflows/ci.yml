name: Launcher Build

on:
  workflow_dispatch: # Permite ejecutarlo manualmente desde GitHub
  push:
    branches: [ master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.version }}
          name: Release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}
          allowUpdates: true # Si ya existe el tag, lo actualiza

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-14, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build for current OS
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            npx electron-builder --linux
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            npx electron-builder --win
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            npx electron-builder --mac
          fi

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
