name: Launcher Build

on:
  workflow_dispatch: # Ejecutar manualmente desde GitHub
  push:
    branches: [ master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.version }}
          name: Release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}
          allowUpdates: true

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci
        shell: bash

      - name: Build for current OS
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          case "$RUNNER_OS" in
            Linux)
              npx electron-builder --linux
              ;;
            Windows)
              npx electron-builder --win
              ;;
            macOS)
              npx electron-builder --mac
              ;;
          esac

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.version }}
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
